{
    "openapi": "3.0.0",
    "info": {
      "title": "API REST",
      "description": "API desarrollada en NodeJS, Express y MySQL",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "http://localhost:5000"
      }
    ],

   


    "tags": [
      {
        "name": "Product",
        "description": "Endpoints de Product"
      }
    ],

    "paths": {

      "/api/v1/product/create": {
        "post": {
          "summary": "create product",
          "tags": ["Product"],
          "description": "create product",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/product post"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "product created successfully"
            },
            "400": {
              "description": "Error in the shipping data"
            },
            "500": {
              "description": "Error in the server"
            }
          }
        }
      },

      "/api/v1/product/update/": {
        "put": {
          "summary": "update product",
          "tags": ["Product"],
          "description": "update product",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/update"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "product updated successfully"
            },
            "400": {
              "description": "Error in the shipping data"
            },
            "500": {
              "description": "Error in the server"
            }
          }
        }
      },

      "/api/v1/product/delete/": {
        "delete": {
          "summary": "delete product",
          "tags": ["Product"],
          "description": "delete product",
          
          "responses": {
            "200": {
              "description": "product deleted successfully"
            },
            "400": {
              "description": "Error in the shipping data"
            },
            "500": {
              "description": "Error in the server"
            }
          }
        }
      },
      "/api/v1/product/scores": {
        "get": {
          "summary": "scores product",
          "tags": ["Product"],
          "description": "scores product",
          
          "responses": {
            "200": {
              "description": "Product get successfully"
            },
            "400": {
              "description": "Error in the shipping data"
            },
            "500": {
              "description": "Error in the server"
            }
          }
        }
      },
      "/api/v1/product/stats": {
        "get": {
          "summary": "stats product",
          "tags": ["Product"],
          "description": "See the statistics of your products",
          
          "responses": {
            "200": {
              "description": "Product get successfully"
            },
            "400": {
              "description": "Error in the shipping data"
            },
            "500": {
              "description": "Error in the server"
            }
          }
        }
      },




      "/api/v1/inventory": {
        "get": {
          "summary": "inventory",
          "tags": ["inventory"],
          "description": "inventory",
          
          "responses": {
            "200": {
              "description": "Inventory get successfully"
            },
            "400": {
              "description": "Error in the shipping data"
            },
            "500": {
              "description": "Error in the server"
            }
          }
        }
      },

      "/api/v1/inventory/create": {
        "post": {
          "summary": "create Inventory",
          "tags": ["inventory"],
          "description": "create Inventory",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inventory post"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Inventory created successfully"
            },
            "400": {
              "description": "Error in the shipping data"
            },
            "500": {
              "description": "Error in the server"
            }
          }
        }
      },


      "/api/v1/product/sell/{id}": {
        "post": {
          "summary": "se crea ventas",
          "tags": ["Sales"],
          "description": "se crea ventas",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "schema": {
                "type": "string",
                "example": "e7990dd3-8aac-476a-810a-3a00753f010b"
              },
              "required": true,
              "description": "id del producto"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sales post"
                }
              }
            }
          },
          
          "responses": {
            "200": {
              "description": "Sale get successfully"
            },
            "400": {
              "description": "Error in the shipping data"
            },
            "500": {
              "description": "Error in the server"
            }
          }
        }
      },
      "/api/v1/sale/best-clients": {
        "get": {
          "summary": "best clients",
          "tags": ["Sales"],
          "description": "best clients",
          
          "responses": {
            "200": {
              "description": "Sales get successfully"
            },
            "400": {
              "description": "Error in the shipping data"
            },
            "500": {
              "description": "Error in the server"
            }
          }
        }
      },
      "/api/v1/sale/operators/time-delivery": {
        "post": {
          "summary": "Sales post time-delivery",
          "tags": ["Sales"],
          "description": "Manage the delivery times of your products by your operators",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sales post time-delivery"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Sales created successfully"
            },
            "400": {
              "description": "Error in the shipping data"
            },
            "500": {
              "description": "Error in the server"
            }
          }
        }
      },


      "/api/v1/client/create": {
        "post": {
          "summary": "create client",
          "tags": ["Client"],
          "description": "create client",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/client post"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "client created successfully"
            },
            "400": {
              "description": "Error in the shipping data"
            },
            "500": {
              "description": "Error in the server"
            }
          }
        }
      }

    },  



    "components": {
      "schemas": {
        "product post": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 20,
              "example": "camisa"
            },
            "description": {
              "type": "string",
              "minLength": 2,
              "maxLength": 20,
              "example": "camisa de algodon"
            },
            "punctuation": {
                "type": "integer",
                "example": 5
            },
            "creationDate": {
                "type": "string",
                "format": "date"
            },
            "updateDate": {
                "type": "string",
                "format": "date"
            }   
          },
          "required": [
            "name",
            "description",
            "punctuation",
            "creationDate",
            "updateDate"
          ]
        },
        "product put":{
          "type": "object",
          "properties": {
            "name": {
                "type": "string",
                "minLength": 2,
                "maxLength": 20,
                "example": "camisa"
              },
              "description": {
                "type": "string",
                "minLength": 2,
                "maxLength": 20,
                "example": "camisa de algodon"
              },
              "punctuation": {
                  "type": "integer",
                  "example": 5
              },
              "creationDate": {
                  "type": "string",
                  "format": "date"
              },
              "updateDate": {
                  "type": "string",
                  "format": "date"
              }
          },
          "required": [
            "name",
            "description",
            "punctuation",
            "creationDate",
            "updateDate"
          ]
        },
        "product delete":{
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 20,
                    "example": "camisa"
                },
                "description": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 20,
                    "example": "camisa de algodon"
                },
                "punctuation": {
                    "type": "integer",
                    "example": 5
                },
                "creationDate": {
                    "type": "string",
                    "format": "date"
                },
                "updateDate": {
                    "type": "string",
                    "format": "date"
                }
            },
            "required": [
                "name",
                "description",
                "punctuation",
                "creationDate",
                "updateDate"
            ]
        },      


      "Inventory get":{
        "type": "object",
        "properties": {

            
        },
        "required": [
            
        ]
      },
      "Inventory post": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "example": "e7990dd3-8aac-476a-810a-3a00753f010b"
          },
          "stock": {
            "type": "integer",
            "example": 5
          }
          
        },
        "required": [
          "productId",
          "stock"
        ]
      },


      "Sales post": {
        "type": "object",
        "properties": {
          "stock": {
            "type": "integer",
            "example": 1
          }
          
        },
        "required": [
          "stock"
        ]
      },
      "Sales Get": {
        "type": "object",
        "properties": {
          "stock": {
            "type": "integer",
            "example": 1
          }
          
        },
        "required": [
          "stock"
        ]
      },
      "Sales post time-delivery": {
        "type": "object",
        "properties": {
          "operatorId": {
            "type": "string",
            "example": "e7990dd3-8aac-476a-810a-3a00753f010b"
          },
          "saleId": {
            "type": "string",
            "example": "e7990dd3-8aac-476a-810a-3a00753f010b"
          },
          "deliveryTime":{
            "type": "string",
            "example": 4.5
          }
          
        },
        "required": [
          "operatorId",
          "saleId",
          "deliveryTime"
        ]
      },


      "client post": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "example"
          },
          "address": {
            "type": "string",
            "example": "calle 5"
          },
          "email": {
            "type": "string",
            "example": "example@example.com"         
          },
          "phone": {
            "type": "string",
            "example": "123456789"
          } 
        },
        "required": [
          "name",
          "address",
          "email",
          "phone"
        ]
      }
    }
  }
}